dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)

dnl ================================================================
dnl Package version (i.e. the pretty number that users see)
dnl ================================================================
m4_define([xgen_major_version], [0])
m4_define([xgen_minor_version], [1])
m4_define([xgen_micro_version], [0])
m4_define([xgen_version],
          [xgen_major_version.xgen_minor_version.xgen_micro_version])

dnl ================================================================
dnl Interface version details for libtool
dnl ================================================================
# NB: I didn't copy the widely used glib/gtk style of dealing with libtool
# versioning since I found the different (compared to libtool's documentation)
# ideas for what the interface age should represent; and the addition of a
# binary age confusing. I couldn't find any documentation/mailing list archives
# etc explaing the ideas nor any code that makes use of those values. They also
# seem to go against the advice of not basing the libtool versioning on package
# versioning.
#
# For reference on how the various numbers should be updated at release time
# these rules are adapted from the libtool info pages:
#
#  1. Update the version information only immediately before a public
#     release of your software.
#
#  2. If the library source code has changed at all since the last
#     update, then increment REVISION (`C:R:A' becomes `C:r+1:A').
#
#  3. If any interfaces have been added, removed, or changed since the
#     last update, increment CURRENT, and set REVISION to 0.
#
#  4. If any interfaces have been added since the last public release,
#     then increment AGE.
#
#  5. If any interfaces have been removed since the last public release,
#     then set AGE to 0.
m4_define([xgen_lt_current], 0)
m4_define([xgen_lt_revision], 0)
m4_define([xgen_lt_age], 0)
# We do also tell libtool the pretty version also:
m4_define([xgen_lt_release], [xgen_version])

AC_INIT(xgen, [xgen_version])
AC_CONFIG_SRCDIR(xgen/xgen.c)
AC_CONFIG_MACRO_DIR([m4])
AC_CONFIG_HEADERS(config.h)
AM_INIT_AUTOMAKE([gnu])

dnl ================================================================
dnl More version number stuff
dnl ================================================================
XGEN_MAJOR_VERSION=xgen_major_version
XGEN_MINOR_VERSION=xgen_minor_version
XGEN_MICRO_VERSION=xgen_micro_version
XGEN_VERSION=xgen_version

AC_SUBST(XGEN_MAJOR_VERSION)
AC_SUBST(XGEN_MINOR_VERSION)
AC_SUBST(XGEN_MICRO_VERSION)
AC_SUBST(XGEN_VERSION)


dnl ================================================================
dnl libtool versioning
dnl ================================================================
XGEN_LT_CURRENT=xgen_lt_current
XGEN_LT_REVISION=xgen_lt_revision
XGEN_LT_AGE=xgen_lt_age
XGEN_LT_RELEASE=xgen_lt_release
AC_SUBST(XGEN_LT_CURRENT)
AC_SUBST(XGEN_LT_REVISION)
AC_SUBST(XGEN_LT_AGE)
AC_SUBST(XGEN_LT_RELEASE)

AM_MAINTAINER_MODE


dnl ================================================================
dnl Handle extra configure options
dnl ================================================================

AC_ARG_ENABLE(debug,
  AC_HELP_STRING([--enable-debug], [enable debuging messages]),
  [
   if test $enableval = yes; then
     AC_DEFINE(XGENGEN_DEBUG, 1, "define to enable debuging")
     CFLAGS="-g3 -O0"
   else
    if test -z $CFLAGS; then
     CFLAGS="-g3 -O2"
    fi
   fi
  ],
  [
   if test -z $CFLAGS; then
    CFLAGS="-g3 -O2"
   fi
  ])


AC_ARG_ENABLE(werror,
  AC_HELP_STRING([--enable-werror], [Use -Werror option for compilation]),
  [
      if test $enableval = yes; then
         EXTRA_CFLAGS="-Wall -Werror"
      else
         EXTRA_CFLAGS="-Wall"
      fi
  ],
  [
   if test -z $EXTRA_CFLAGS; then
      EXTRA_CFLAGS="-Wall"
   fi
  ])


dnl ================================================================
dnl Compiler stuff.
dnl ================================================================
AM_PROG_CC_C_O
AC_ISC_POSIX
AC_C_CONST


dnl ================================================================
dnl Libtool stuff.
dnl ================================================================
AC_PROG_LIBTOOL
LIBTOOL="$LIBTOOL --preserve-dup-deps"


dnl ================================================================
dnl I18n stuff.
dnl ================================================================
dnl AC_PROG_INTLTOOL([0.23])
dnl GETTEXT_PACKAGE=xgen
dnl AC_SUBST(GETTEXT_PACKAGE)
dnl AC_SUBST([CONFIG_STATUS_DEPENDENCIES],['$(top_srcdir)/po/LINGUAS'])
dnl AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Gettext package])
dnl ALL_LINGUAS="`cat "$srcdir/po/LINGUAS" | grep -v '^#'`"
dnl xgenlocaledir='${prefix}/${DATADIRNAME}/locale'
dnl AC_SUBST(xgenlocaledir)
dnl AM_GLIB_GNU_GETTEXT


dnl ================================================================
dnl Documentation stuff.
dnl ================================================================
GTK_DOC_CHECK(1.8)

# we don't want to build the documentation from a SVN checkout unless we
# explicitly tell configure to do so; this allows avoiding to recurse into
# the documentation directory when building Clutter inside Poky for a
# target device that doesn't have gtk-doc installed. for reference
# see: http://bugzilla.openedhand.com/show_bug.cgi?id=1047
#
# we use autogen.sh as it exists only inside the SVN checkouts, and it
# is not packaged into tarballs.
AM_CONDITIONAL([BUILD_GTK_DOC],
               [test "x$enable_gtk_doc" = "xyes" || test ! -f "autogen.sh"])


dnl ================================================================
dnl Check for dependency packages.
dnl ================================================================
XGEN_PKG_REQUIRES="glib-2.0 >= 2.16 libxml-2.0 xcb-proto >= 1.0"
AC_SUBST(XGEN_PKG_REQUIRES)
PKG_CHECK_MODULES(XGEN_DEP, [$XGEN_PKG_REQUIRES])
AC_SUBST(XGEN_DEP_CFLAGS)
AC_SUBST(XGEN_DEP_LIBS)

# Find the xcb-proto protocol descriptions
AC_MSG_CHECKING(XCBPROTO_XCBINCLUDEDIR)
XCBPROTO_XCBINCLUDEDIR=`$PKG_CONFIG --variable=xcbincludedir xcb-proto`
AC_MSG_RESULT($XCBPROTO_XCBINCLUDEDIR)
AC_SUBST(XCBPROTO_XCBINCLUDEDIR)


dnl ================================================================
dnl Misc program dependencies.
dnl ================================================================
AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)
AC_PROG_INSTALL


dnl ================================================================
dnl Checks for header files.
dnl ================================================================
AC_PATH_X
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h signal.h)


dnl ================================================================
dnl Checks for library functions.
dnl ================================================================
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(putenv strdup)


dnl ================================================================
dnl What needs to be substituted in other files
dnl ================================================================
AC_SUBST(EXTRA_CFLAGS)
AC_SUBST(EXTRA_CPPFLAGS)


dnl ================================================================
dnl Dah Da!
dnl ================================================================
AC_OUTPUT(
Makefile
xgen/Makefile
tests/Makefile
tests/conform/Makefile
doc/Makefile
doc/reference/Makefile
doc/reference/xgen/Makefile
doc/reference/xgen/version.xml
dnl po/Makefile.in
xgen-0.1.pc
)

dnl Configuration output

echo ""
echo "  Package: ${PACKAGE_NAME} ${PACKAGE_VERSION}"
echo ""
echo "  Configuration"
echo ""
echo "  Used CFLAGS:"
echo "    CPPFLAGS............: ${CPPFLAGS} ${EXTRA_CPPFLAGS}"
echo "    CFLAGS..............: ${CFLAGS} ${EXTRA_CFLAGS}"
echo ""
echo "  Installation:"
echo "    Prefix..............: ${prefix}"
echo ""
